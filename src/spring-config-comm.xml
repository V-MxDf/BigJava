<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd"
>  <!--根据set名称匹配,无需rel引用-->
    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/zhihu"/>
        <property name="username" value="root"/>
        <property name="password" value="xdf1946"/>
    </bean>

    <!--配置sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="configLocations" value="classpath:hibernate.cfg.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <prop key="cache.use_query_cache">true</prop>
                <!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->

                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!--<prop key="hibernate.cache.query_cache_factory">-->
                <!--org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory-->
                <!--</prop>-->
            </props>
        </property>
    </bean>

    <!--事务配置-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--事务的传播特性-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--哪些类哪些方法使用事务-->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="allDaoMethod" expression="execution(* com.bigjava.dao.UserDaoImpl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allDaoMethod"/>
    </aop:config>

    <!--struts配置-->
    <bean id="userAction" class="com.bigjava.action.UserAction" scope="prototype">
        <property name="userBiz" ref="UserBiz"/>
        <property name="questionBiz" ref="questionBiz"/>
    </bean>

    <bean id="verify" class="com.bigjava.action.VerifyCodeAction" scope="prototype"/>

    <bean id="permissions" class="com.bigjava.action.UserAction" scope="prototype"/>

    <bean name="question" class="com.bigjava.bean.Question"/>

    <bean id="questionAction" class="com.bigjava.action.QuestionAction" scope="prototype">
        <property name="questionBiz" ref="questionBiz"/>
        <property name="userBiz" ref="UserBiz"/>
    </bean>

    <bean id="pagination" class="com.bigjava.action.PaginationAction" scope="prototype">
        <property name="questionBiz" ref="questionBiz"/>
    </bean>

    <bean id="UserAction" class="com.bigjava.action.UserAction" scope="prototype"/>

    <bean id="commentAction" class="com.bigjava.action.CommentAction" scope="prototype">
        <property name="userBiz"  ref="UserBiz"/>
        <property name="commentBiz" ref="commentBiz"/>
    </bean>

    <!--拦截器-->
    <bean id="interceptor" class="com.bigjava.interceptor.userInterceptor"/>
</beans>